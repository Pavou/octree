wrapper {
    gradleVersion = '5.2'
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}

plugins {
    id 'java-library'
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'io.github.mvrozanti'
version '0.1'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation group: 'org.apache.commons', name: 'commons-math3', version: '3.6.1'
}

test {
    useJUnitPlatform()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "jar"
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourceJar
            pom {
                name = "octree"
                description = "Octree implementation with radius search support"
                url = "http://github.com/mvrozanti/octree"
                licenses {
                    license {
                        name = 'The MIT License (MIT)'
                        url = 'https://raw.githubusercontent.com/mvrozanti/octree/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'mvrozanti'
                        name = 'Marcelo V. Rozanti'
                        email = 'mvrozanti@hotmail.com'
                    }
                    developer {
                        id = 'Pavou'
                        name = 'Pantazis Vouzaxakis'
                        email = 'panzos95@hotmail.com'
                    }
                    developer {
                        id = 'jbehley'
                        name = 'Jens Behley'
                        url = 'https://jbehley.github.io/'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/mvrozanti/octree'
                    developerConnection = 'scm:git:ssh://github.com/mvrozanti/octree.git'
                    url = 'http://github.com/mvrozanti/octree'
                }
            }
        }
    }
    repositories {
        maven {
            def snapshotsRepoUrl = 'https://s01.oss.sonatype.org/content/repositories/snapshots/'
            def releasesRepoUrl = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/'
            url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
            credentials {
                username System.getenv("SONATYPE_USER")
                password System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
//    java {
//        withJavadocJar()
//        withSourcesJar()
//    }
}

tasks.withType(Jar) { task ->
    task.doLast {
        ant.checksum algorithm: 'md5', file: it.archivePath
        ant.checksum algorithm: 'sha1', file: it.archivePath
        ant.checksum algorithm: 'sha-256', file: it.archivePath, fileext: '.sha256'
        ant.checksum algorithm: 'sha-512', file: it.archivePath, fileext: '.sha512'
    }
}

jar {
    from sourceSets.main.output
    from sourceSets.main.allJava
}

signing {
    sign publishing.publications.mavenJava
}
